{"version":3,"file":"popover-stories-popover-stories.efd8c271.iframe.bundle.js","mappings":";;AAyCA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;;AAEA;AAQA;AAQA;;AAKA;;ACtDA;AAQA;;;AASA;AACA;AASA;;AAKA;;AC6FA;AAOA;AACA;AACA;AACA;AACA;;AAEA;;AArDA;;AAEA;;AAGA;;AAEA;AACA;AAEA;;AAkDA;;AA7IA;AAWA;AACA;AACA;AACA;AACA;AACA;AAUA;AAUA;AAIA;AAGA;AAWA;AAWA;;AA6EA;;;AChIA;;;AAmFA;AASA;;AAEA;AACA;;AAEA;AACA;;AAMA","sources":["webpack://@spectrum-css/preview/../../components/actionbutton/stories/template.js","webpack://@spectrum-css/preview/../../components/divider/stories/template.js","webpack://@spectrum-css/preview/../../components/menu/stories/template.js","webpack://@spectrum-css/preview/../../components/popover/stories/template.js"],"sourcesContent":["import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { lowerCase, capitalize } from \"lodash-es\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-ActionButton\",\n\tsize = \"m\",\n\ticonName,\n\tlabel,\n\tisQuiet = false,\n\tisSelected = false,\n\tisEmphasized = false,\n\tisDisabled = false,\n\thasPopup = false,\n\thideLabel = false,\n\tstaticColor,\n\tcustomClasses = [],\n\tcustomIconClasses = [],\n\tonclick,\n\tid,\n\trole,\n\t...globals\n}) => {\n\tconst { express } = globals;\n\n\ttry {\n\t\tif (!express) import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\treturn html`\n\t\t<button\n\t\t\taria-label=${ifDefined(label)}\n\t\t\taria-haspopup=${hasPopup ? \"true\" : \"false\"}\n\t\t\taria-pressed=${isSelected ? \"true\" : \"false\"}\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--quiet`]: isQuiet,\n\t\t\t\t[`${rootClass}--emphasized`]: isEmphasized,\n\t\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t\t[`is-disabled`]: isDisabled,\n\t\t\t\t[`is-selected`]: isSelected,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\trole=${ifDefined(role)}\n\t\t\t?disabled=${isDisabled}\n\t\t\t@click=${onclick}\n\t\t>\n\t\t\t${when(hasPopup, () =>\n\t\t\t\tIcon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName: \"CornerTriangle100\",\n\t\t\t\t\tcustomClasses: [`${rootClass}-hold`],\n\t\t\t\t})\n\t\t\t)}\n\t\t\t${when(iconName, () =>\n\t\t\t\tIcon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName,\n\t\t\t\t\tcustomClasses: [`${rootClass}-icon`, ...customIconClasses],\n\t\t\t\t})\n\t\t\t)}\n\t\t\t${when(\n\t\t\t\tlabel && !hideLabel,\n\t\t\t\t() => html`<span class=\"${rootClass}-label\">${label}</span>`\n\t\t\t)}\n\t\t</button>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\nimport { upperCase, lowerCase, capitalize } from \"lodash-es\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Divider\",\n\tsize = \"m\",\n\ttag = \"hr\",\n\tstaticColor,\n\tvertical = false,\n\tcustomClasses = [],\n\t...globals\n}) => {\n\tconst { express } = globals;\n\n\ttry {\n\t\tif (!express) import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\tif (tag === \"hr\") {\n\t\treturn html`\n    <hr\n      class=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${upperCase(size)}`]: typeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--vertical`]: vertical === true,\n\t\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n      style=${\n\t\t\t\tvertical === true\n\t\t\t\t\t? \"min-height: 20px; height: auto; align-self: stretch\"\n\t\t\t\t\t: \"\"\n\t\t\t}\n      role=\"separator\"\n      >\n    </hr>`;\n\t} else {\n\t\treturn html` <div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--vertical`]: vertical === true,\n\t\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tstyle=${vertical === true\n\t\t\t\t? \"min-height: 20px; height: auto; align-self: stretch\"\n\t\t\t\t: \"\"}\n\t\t\trole=\"separator\"\n\t\t></div>`;\n\t}\n};\n","import { html, css } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { repeat } from \"lit/directives/repeat.js\";\n\nimport { Template as Divider } from \"@spectrum-css/divider/stories/template.js\";\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const MenuItem = ({\n  rootClass,\n  label,\n  description,\n  iconName,\n  isHighlighted = false,\n  isActive = false,\n  isSelected = false,\n  isDisabled = false,\n  isChecked = false,\n  isFocused = false,\n  isDrillIn = false,\n  isCollapsible = false,\n  isOpen = false,\n  role = \"menuitem\",\n  items = [],\n  size,\n  id,\n  ...globals\n}) => html`\n    <li\n      class=${classMap({\n        [`${rootClass}`]: true,\n        \"is-highlighted\": isHighlighted,\n        \"is-active\": isActive,\n        \"is-focused\": isFocused,\n        \"is-selected\": isSelected,\n        \"is-disabled\": isDisabled,\n        [`${rootClass}--drillIn`]: isDrillIn,\n        [`${rootClass}--collapsible`]: isCollapsible,\n        \"is-open\": isOpen,\n      })}\n      id=${ifDefined(id)}\n      role=${ifDefined(role)}\n      aria-selected=${isSelected ? \"true\" : \"false\"}\n      aria-disabled=${isDisabled ? \"true\" : \"false\"}\n      tabindex=${ifDefined(!isDisabled ? \"0\" : undefined)}>\n      ${isCollapsible\n        ? Icon({\n            ...globals,\n            iconName: \"ChevronRight100\",\n            size,\n            customClasses: [\n              `${rootClass}Icon`,\n              \"spectrum-Menu-chevron\",\n            ],\n          }) : ''}\n      ${iconName\n        ? Icon({\n            ...globals,\n            iconName,\n            size,\n            customClasses: [\n              `${rootClass}Icon`,\n              `${rootClass}Icon--workflowIcon`\n            ] \n          }) : ''}\n      ${isCollapsible\n        ? html`<span class=\"spectrum-Menu-sectionHeading\">${label}</span>`\n        : html`<span class=\"${rootClass}Label\">${label}</span>`\n      }\n      ${typeof description != \"undefined\" \n        ? html`<span class=\"${rootClass}Description\">${description}</span>`\n        : ''}\n      ${isDrillIn\n        ? Icon({\n            ...globals,\n            iconName: \"ChevronRight100\",\n            size,\n            customClasses: [\n              `${rootClass}Icon`,\n              \"spectrum-Menu-chevron\",\n            ],\n          })\n        : ''}\n      ${isChecked\n        ? Icon({\n            ...globals,\n            iconName: \"Checkmark100\",\n            size,\n            customClasses: [\n              `${rootClass}Icon`,\n              \"spectrum-Menu-checkmark\",\n            ],\n          })\n        : ''}\n      ${isCollapsible && items.length > 0 ? Template({ ...globals, items, isOpen, size }) : ''}\n    </li>\n  `;\n\nexport const MenuGroup = ({\n  heading,\n  id,\n  idx = 0,\n  items = [],\n  isDisabled = false,\n  isSelectable = false,\n  subrole,\n  size,\n  ...globals\n}) => html`\n    <li\n      id=${ifDefined(id)}\n      role=\"presentation\">\n      ${heading\n        ? html`<span\n            class=\"spectrum-Menu-sectionHeading\"\n            id=${id ?? `menu-heading-category-${idx}`}\n            aria-hidden=\"true\"\n            >${heading}</span\n          >`\n        : \"\"}\n      ${Template({\n        ...globals,\n        role: \"group\",\n        subrole,\n        labelledby: id,\n        items,\n        isDisabled,\n        isSelectable,\n        size,\n      })}\n    </li>\n  `;\n\nexport const Template = ({\n  rootClass = \"spectrum-Menu\",\n  labelledby,\n  customClasses = [],\n  customStyles = {},\n  size,\n  isDisabled = false,\n  isSelectable = false,\n  isOpen = false,\n  items = [],\n  role = \"menu\",\n  subrole = \"menuitem\",\n  id,\n  ...globals\n}) => {\n  return html`\n    <ul\n      class=${classMap({\n        [rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]: typeof size !== \"undefined\",\n        \"is-selectable\": isSelectable,\n        \"is-open\": isOpen,\n        ...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n      })}\n      id=${ifDefined(id)}\n      role=${ifDefined(role)}\n      aria-labelledby=${ifDefined(labelledby)}\n      aria-disabled=${isDisabled ? \"true\" : \"false\"}\n      style=${styleMap(customStyles)}\n    >\n      ${repeat(items, (i) => {\n        if (i.type === \"divider\")\n          return Divider({\n            ...globals,\n            tag: \"li\",\n            size: \"s\",\n            customClasses: [`${rootClass}-divider`],\n          });\n        else if (i.heading) return MenuGroup({ ...i, ...globals, subrole, size });\n        else\n          return MenuItem({\n            ...globals,\n            ...i,\n            rootClass: `${rootClass}-item`,\n            role: subrole,\n            size,\n          });\n      })}\n    </ul>\n  `;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { useArgs } from \"@storybook/client-api\";\n\nimport \"@spectrum-css/popover\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Popover\",\n\tsize = \"m\",\n\tisOpen = false,\n\twithTip = false,\n\tposition = \"top\",\n\tcustomClasses = [],\n\tid = \"popover-1\",\n\ttestId,\n\ttriggerId = \"trigger\",\n\tcustomStyles = {\n\t\t\"--spectrum-popover-offset\": \"8px\",\n\t\t\"inset-inline-start\": \"0px\",\n\t\t\"inset-block-start\": \"0px\",\n\t},\n\ttrigger,\n\tcontent = [],\n\t...globals\n}) => {\n\tconst [, updateArgs] = useArgs();\n\n\tif (content.length === 0) {\n\t\tconsole.warn(\"Popover: No content provided.\");\n\t\treturn html``;\n\t}\n\n\tconst { express } = globals;\n\n\ttry {\n\t\tif (!express) import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t} catch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\treturn html`\n\t\t${when(typeof trigger === \"function\", () => trigger({\n\t\t\t...globals,\n\t\t\tisSelected: isOpen,\n\t\t\tonclick: () => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t// No trigger? Nothing to do.\n\t\t\t\tif (!trigger || !position) return [];\n\n\t\t\t\t// Get trigger element and popover\n\t\t\t\tconst element = document.querySelector(`#${triggerId}`);\n\n\t\t\t\tif (!element) return [];\n\t\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\t\tconst popover = document.querySelector(`#${id}`);\n\t\t\t\tif (!popover) return [];\n\n\t\t\t\tconst transforms = [];\n\t\t\t\tconst additionalStyles = {};\n\t\t\t\tconst triggerXCenter = (rect.left + rect.right) / 2;\n\t\t\t\tconst triggerYCenter = (rect.top + rect.bottom) / 2;\n\t\t\t\tconst popWidth = popover.offsetWidth ?? 0;\n\t\t\t\tconst popHeight = popover.offsetHeight ?? 0;\n\t\t\t\tconst textDir = getComputedStyle(document.querySelector('html')).direction;\n\t\t\t\tlet x, y;\n\t\t\t\tlet xOffset = \"+ 0px\";\n\t\t\t\tlet yOffset = \"+ 0px\";\n\t\t\t\tif (position.includes(\"top\") || position.includes(\"bottom\") && !(position.includes(\"-top\") || position.includes(\"-bottom\"))) {\n\t\t\t\t\tx = triggerXCenter - (popWidth > 0 ? popWidth / 2 : popWidth);\n\t\t\t\t} \n\t\t\t\tif (position.includes(\"left\") || position.includes(\"right\")) {\n\t\t\t\t\ty = triggerYCenter - (popHeight > 0 ? popHeight / 2 : popHeight);\n\t\t\t\t}\n\t\t\t\tif (position.includes(\"top\") && !position.includes(\"-top\")) {\n\t\t\t\t\ty = rect.top - popHeight;\n\t\t\t\t\tyOffset = \"- var(--spectrum-popover-offset)\";\n\t\t\t\t} else if (position.includes(\"bottom\") && !position.includes(\"-bottom\")) {\n\t\t\t\t\ty = rect.bottom;\n\t\t\t\t\tyOffset = \"+ var(--spectrum-popover-offset)\";\n\t\t\t\t} else if (position.includes(\"left\")) {\n\t\t\t\t\tif (textDir == 'rtl') {\n\t\t\t\t\t\tx = rect.right;\n\t\t\t\t\t\txOffset = \"+ var(--spectrum-popover-offset)\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = rect.left - popWidth;\n\t\t\t\t\t\txOffset = \"- var(--spectrum-popover-offset)\";\n\t\t\t\t\t}\n\t\t\t\t} else if (position.includes(\"right\")) {\n\t\t\t\t\tif (textDir == 'rtl') {\n\t\t\t\t\t\tx = rect.left - popWidth;\n\t\t\t\t\t\txOffset = \"- var(--spectrum-popover-offset)\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = rect.right;\n\t\t\t\t\t\txOffset = \"+ var(--spectrum-popover-offset)\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (x) transforms.push(`translateX(calc(var(--flow-direction) * calc(${parseInt(x, 10)}px ${xOffset})))`);\n\t\t\t\tif (y) transforms.push(`translateY(calc(${y}px ${yOffset}))`);\n\n\t\t\t\t// Add start and end styles\n\t\t\t\tif (position === \"top-start\" || position === \"bottom-start\") {\n\t\t\t\t\tadditionalStyles[\"inset-inline-start\"] = \"calc(\" + (popWidth / 2) + \"px - var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t} else if (position === \"top-end\" || position === \"bottom-end\") {\n\t\t\t\t\tadditionalStyles[\"inset-inline-start\"] = \"calc(-1 *\" + (popWidth / 2) + \"px + var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t} else if (position === \"left-top\" || position === \"right-top\") {\n\t\t\t\t\tadditionalStyles[\"inset-block-start\"] = \"calc(\" + (popHeight / 2) + \"px - var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t} else if (position === \"left-bottom\" || position === \"right-bottom\") {\n\t\t\t\t\tadditionalStyles[\"inset-block-start\"] = \"calc(-1 *\" + (popHeight / 2) + \"px + var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t}\n\n\t\t\t\tupdateArgs({\n\t\t\t\t\tisOpen: !isOpen,\n\t\t\t\t\tcustomStyles: {\n\t\t\t\t\t\t...customStyles,\n\t\t\t\t\t\ttransform: transforms.join(\" \"),\n\t\t\t\t\t\t...additionalStyles,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 100)\n\t\t\t}\n\t\t}))}\n\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t\"is-open\": isOpen,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--withTip`]: withTip,\n\t\t\t\t[`${rootClass}--${position}`]: typeof position !== \"undefined\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\trole=\"presentation\"\n\t\t\tid=${ifDefined(id)}\n\t\t\tdata-testid=${ifDefined(testId)}\n\t\t>\n\t\t\t${content.map((c) => (typeof c === \"function\" ? c({}) : c))}\n\t\t\t${withTip\n\t\t\t\t? position && [\"top\", \"bottom\"].some((e) => position.startsWith(e))\n\t\t\t\t\t? html`<svg class=\"${rootClass}-tip\" viewBox=\"0 -0.5 16 9\" width=\"10\"><path class=\"${rootClass}-tip-triangle\" d=\"M-1,-1 8,8 17,-1\"></svg>`\n\t\t\t\t\t: html`<svg class=\"${rootClass}-tip\" viewBox=\"0 -0.5 9 16\" width=\"10\"><path class=\"${rootClass}-tip-triangle\" d=\"M-1,-1 8,8 -1,17\"></svg>`\n\t\t\t\t: \"\"}\n\t\t</div>\n\t`;\n};\n"],"names":[],"sourceRoot":""}